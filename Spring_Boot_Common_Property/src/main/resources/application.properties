#启用调试日志。
debug=false
#启用跟踪日志。
trace=false

######################
# LOGGING 日记
######################
# 日志配置文件的位置。 例如，Logback的classpath:logback.xml
logging.config=classpath:logback.xml
# 日志文件名（例如，`myapp.log`）。名称可以是精确位置或相对于当前目录。
logging.file=property.log
# 最大日志文件大小。 仅支持默认的logback设置
logging.file.max-size=10MB
# 日志文件的位置。 例如，`/ var / log`。
logging.path=/var/log

#######################
# AOP
#######################
# 使用AOP 切面编程
spring.aop.auto=true
#是否要创建基于子类的（CGLIB）代理（true），而不是基于标准Java接口的代理（false）
spring.aop.proxy-target-class=true

#-----------------------
# Email
#-----------------------
# 编码格式
spring.mail.default-encoding=UTF-8
# SMTP服务器主机
spring.mail.host=smtp.property.com
#SMTP服务器端口
spring.mail.port=7800
# 登录SMTP用户名
spring.mail.username=property
# 登录SMTP密码
spring.mail.password=123456

#----------------------
# WEB 属性配置
#----------------------
# 服务器应绑定的网络地址
server.address=127.0.0.1
# 是否启用了响应压缩
server.compression.enabled=false
# 连接器在关闭连接之前等待另一个HTTP请求的时间。 未设置时，将使用连接器的特定于容器的默认值。 使用值-1表示没有（即无限）超时
server.connection-timeout=2000
# 错误控制器的路径
server.error.path=/error
# 是否启用HTTP / 2支持，如果当前环境支持它。
server.http2.enabled=false
# 服务器端口默认为:8080
server.port=8084
# SP servlet的类名。
server.servlet.jsp.class-name=org.apache.jasper.servlet.JspServlet
# 主调度程序servlet的路径。
server.servlet.path=/home 
# 会话cookie名称
server.servlet.session.cookie.name=propertydemo

#--------------------
# HTTP encoding
#--------------------
# HTTP请求和响应的字符集。 如果未明确设置，则添加到“Content-Type”标头。
spring.http.encoding.charset=UTF-8 
# 是否启用http编码支持。
spring.http.encoding.enabled=true
#--------------------
# MULTIPART (MultipartProperties)
#--------------------
# 是否启用分段上传支持
spring.servlet.multipart.enabled=true
# 上传文件的中间位置
spring.servlet.multipart.location=/log
# 最大文件的大小
spring.servlet.multipart.max-file-size=1MB
# 最大请求大小
spring.servlet.multipart.max-request-size=10MB
# 是否在文件或参数访问时懒惰地解析多部分请求。
spring.servlet.multipart.resolve-lazily=false
#--------------------------------------------
# SPRING SESSION JDBC (JdbcSessionProperties)
#--------------------------------------------
# cron表达式用于过期的会话清理作业
spring.session.jdbc.cleanup-cron=0 * * * * *
# 数据库模式初始化模式
spring.session.jdbc.initialize-schema=embedded
# 用于初始化数据库模式的SQL文件的路径
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql
# 用于存储会话的数据库表的名称
spring.session.jdbc.table-name=SPRING_SESSION

#----------------------------------
# # MONGODB 数据库配置
#----------------------------------
# 数据库名称
spring.data.mongodb.database=demo
# host 配置
spring.data.mongodb.host=127.0.0.1
# 登录用户名
spring.data.mongodb.username=property
# 登录密码
spring.data.mongodb.password=123456
# 端口号，自己根据安装的mongodb端口配置
spring.data.mongodb.port=9008
# 要启用的Mongo存储库的类型
spring.data.mongodb.repositories.type=auto
# 连接数据uri
spring.data.mongodb.uri=mongodb://localhost/test

#------------------------------
# DATASOURCE 数据库配置
#------------------------------
# MySql jdbc Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 连接数据库
# demo表示的是你创建的数据库;
# useSSL:是否使用SSL证书验证;
# characterEncoding:编码格式;
# useJDBCCompliantTimezoneShift:是否使用符合JDBC的时区转换;
# useLegacyDatetimeCode:是否使用旧版日期时间码;
# serverTimezone:选择服务器时间方式;
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/demo?useSSL=false&requireSSL=false&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
# 数据库用户名
spring.datasource.username=root
# 数据库密码
spring.datasource.password=123456
###########
# Jpa使用
###########
# 目标数据库进行操作，默认情况下自动检测。可以使用“databasePlatform”属性设置。
#spring.jpa.database= demo1
# 要操作的目标数据库的名称，默认情况下自动检测。 也可以使用“Database”枚举来设置。
#spring.jpa.database-platform=DEMO
# DDL模式 一般有这几种方式,Spring Boot会根据是否认为您的数据库是嵌入式的，为您选择一个默认值
# create: 创建架构并销毁以前的数据;
# create-drop: 未检测到架构管理器默认方式;
# validate: 验证架构，不对数据库进行任何更改;
# update: 更新架构时，使用;
# none: 在所有其他情况下，默认为none
spring.jpa.hibernate.ddl-auto=update
# 是否启用SQL语句的日志记录
spring.jpa.show-sql=true

#------------------------------
# DEVTOOLS配置
#------------------------------

#是否启用livereload.com兼容服务器
spring.devtools.livereload.enabled=true
# 服务器端口
spring.devtools.livereload.port=35729
# 是否启用自动重启
spring.devtools.restart.enabled=true

#----------------------------------------
# TESTING PROPERTIES
#----------------------------------------
# 要替换的现有DataSource的类型
spring.test.database.replace=any
# MVC打印选项
spring.test.mockmvc.print=default

# ---------------大家查看文档进行配置，不一一列举了----------------------

# FREEMARKER

# SPRING HATEOAS

# HTTP message conversion

# GSON

# JDBC

# JEST (Elasticsearch HTTP client) (JestProperties)

# CASSANDRA (CassandraProperties)

# --------------------------等等----------------------------------
